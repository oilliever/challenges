$text-light: #ffffff;
$text-dark: #3f3f3f;

$box-shadow: 0px 2px 3px rgba(51, 51, 51, 0.2);

$button-size: (
    sm: 6px 12px,
    md: 8px 16px,
    lg: 11px 22px,
);

$disabled--bg-color: #e0e0e0;
$disabled--text-color: #9e9e9e;

$button-colors: (
    default: (
        text: $text-dark,
        color-1: #e0e0e0,
        color-2: #aeaeae,
        color-3: rgba(249, 233, 233, 0.1),
    ),
    primary: (
        text: $text-light,
        color-1: #2962ff,
        color-2: #0039cb,
        color-3: rgba(41, 98, 255, 0.1),
    ),
    secondary: (
        text: $text-light,
        color-1: #455a64,
        color-2: #1c313a,
        color-3: rgba(94, 130, 142, 0.1),
    ),
    danger: (
        text: $text-light,
        color-1: #d32f2f,
        color-2: #9a0007,
        color-3: rgba(134, 0, 0, 0.1),
    ),
);

.container {
    text-align: center;
    display: grid;
    justify-items: center;
    grid-template-columns: auto auto auto;
    gap: 2rem;
    padding: 5% 5%;
}

@mixin disabled() {
    cursor: not-allowed;
}

@mixin button-style() {
    border-radius: 6px;
    font-size: 14px;
    font-weight: 500;
    cursor: pointer;
    user-select: none;
    text-decoration: none;
    vertical-align: middle;
    display: flex;
    align-items: center;
    justify-content: center;
}

@mixin button-default($color) {
    $variant-config: map-get($button-colors, $color);

    background-color: map-get($variant-config, color-1);
    color: map-get($variant-config, text);
    padding: map-get($button-size, md);
    border: 1px solid transparent;
    box-shadow: $box-shadow;

    &:hover,
    &:focus {
        background-color: map-get($variant-config, color-2);
    }

    &:disabled {
        @include disabled();
        background-color: $disabled--bg-color;
        color: $disabled--text-color;
    }
}

@each $color, $var in $button-colors {
    .btn-default-#{$color} {
        @include button-style();
        @include button-default($color);
    }
}

@mixin button-outline($color) {
    $variant-config: map-get($button-colors, $color);

    background-color: transparent;
    padding: map-get($button-size, md);
    box-shadow: 0px 0px 0px;

    @if ($color==default) {
        color: map-get($variant-config, text);
        border: 1px solid map-get($variant-config, text);
    } @else {
        color: map-get($variant-config, color-1);
        border: 1px solid map-get($variant-config, color-1);
    }

    &:hover,
    &:focus {
        @if ($color==default) {
            background-color: map-get($variant-config, color-1);
        } @else {
            background-color: map-get($variant-config, color-3);
        }
    }

    &:disabled {
        @include disabled();
        background-color: transparent;
        border: 1px solid $disabled--text-color;
        color: $disabled--text-color;
    }
}

@each $color, $var in $button-colors {
    .btn-outline-#{$color} {
        @include button-style();
        @include button-outline($color);
    }
}

@mixin button-text($color) {
    $variant-config: map-get($button-colors, $color);

    background-color: transparent;
    padding: map-get($button-size, md);
    border: 1px solid transparent;
    box-shadow: 0px 0px 0px;

    @if ($color==default) {
        color: map-get($variant-config, text);
    } @else {
        color: map-get($variant-config, color-1);
    }

    &:hover,
    &:focus {
        @if ($color==default) {
            background-color: map-get($variant-config, color-1);
        } @else {
            background-color: map-get($variant-config, color-3);
        }
    }

    &:disabled {
        @include disabled();
        background-color: transparent;
        color: $disabled--text-color;
    }
}

@each $color, $var in $button-colors {
    .btn-text-#{$color} {
        @include button-style();
        @include button-text($color);
    }
}

button {
    @include button-style();
    @include button-default(default);
}
.btn-disable-box-shadow {
    box-shadow: 0px 0px 0px !important;
}

@each $size, $value in $button-size {
    .btn-#{$size} {
        padding: $value !important;
    }
}
.start-icon {
    padding-right: 0.4rem;
    display: flex;
    align-items: center;
    justify-content: center;
}
.start-icon > :only-child {
    width: 1rem;
    height: 1rem;
}

.end-icon > :only-child {
    width: 1rem;
    height: 1rem;
}

.end-icon {
    padding-left: 0.4rem;
    display: flex;
    align-items: center;
    justify-content: center;
}
